'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _grayMatter = require('gray-matter');

var _grayMatter2 = _interopRequireDefault(_grayMatter);

var _styledComponents = require('styled-components');

var _nanoStyle = require('nano-style');

var _nanoStyle2 = _interopRequireDefault(_nanoStyle);

var _reactLive = require('react-live');

var _Catch = require('./Catch');

var _Catch2 = _interopRequireDefault(_Catch);

var _ui = require('./ui');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Editor = (0, _nanoStyle2.default)(_reactLive.LiveEditor)({
  fontFamily: 'Menlo, monospace',
  fontSize: '14px',
  padding: '8px',
  backgroundColor: '#f6f6f6',
  outline: 'none'
});

var KitEditor = function (_Component) {
  _inherits(KitEditor, _Component);

  function KitEditor(props, context) {
    _classCallCheck(this, KitEditor);

    var _this = _possibleConstructorReturn(this, (KitEditor.__proto__ || Object.getPrototypeOf(KitEditor)).call(this));

    var code = props.code,
        scope = props.scope,
        _props$theme = props.theme,
        theme = _props$theme === undefined ? {} : _props$theme;

    var _matter = (0, _grayMatter2.default)(code),
        content = _matter.content,
        _matter$data = _matter.data,
        data = _matter$data === undefined ? {} : _matter$data;

    _this.state = {
      scope: Object.assign({ ThemeProvider: _styledComponents.ThemeProvider, theme: theme }, scope),
      code: content,
      config: data
    };
    return _this;
  }

  _createClass(KitEditor, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _Catch2.default,
        null,
        _react2.default.createElement(
          _reactLive.LiveProvider,
          {
            mountStylesheet: false,
            scope: this.state.scope,
            code: this.state.code,
            transformCode: function transformCode(code) {
              return '\n            <ThemeProvider theme={theme}>\n              <div>' + code + '</div>\n            </ThemeProvider>\n          ';
            }
          },
          _react2.default.createElement(
            _ui.Box,
            null,
            _react2.default.createElement(_reactLive.LivePreview, null),
            _react2.default.createElement(
              _ui.Box,
              { mt: 2 },
              _react2.default.createElement(Editor, null)
            ),
            _react2.default.createElement(
              _ui.Box,
              { w: 1 },
              _react2.default.createElement(_reactLive.LiveError, {
                style: {
                  backgroundColor: 'red',
                  color: 'white',
                  padding: '.5rem',
                  height: 'auto'
                }
              })
            )
          )
        )
      );
    }
  }]);

  return KitEditor;
}(_react.Component);

KitEditor.propTypes = {
  code: _propTypes2.default.string.isRequired,
  scope: _propTypes2.default.object,
  theme: _propTypes2.default.object
};
exports.default = KitEditor;
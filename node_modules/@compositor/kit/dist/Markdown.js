'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _buble = require('buble');

var _mdx = require('@mdx-js/mdx');

var _mdx2 = _interopRequireDefault(_mdx);

var _tag = require('@mdx-js/tag');

var _styledComponents = require('styled-components');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

exports.default = function (_ref) {
  var children = _ref.children,
      components = _ref.components,
      _ref$theme = _ref.theme,
      theme = _ref$theme === undefined ? {} : _ref$theme;

  var jsx = _mdx2.default.sync(children).replace('export default ({components}) =>', '');

  var _transform = (0, _buble.transform)('\n    <ThemeProvider theme={theme}>\n      <React.Fragment>\n        ' + jsx + '\n      </React.Fragment>\n    </ThemeProvider>\n  '),
      code = _transform.code;

  var scope = _extends({ ThemeProvider: _styledComponents.ThemeProvider, MDXTag: _tag.MDXTag }, components, { components: components, theme: theme });
  var keys = Object.keys(scope);
  var values = keys.map(function (k) {
    return scope[k];
  });

  var fn = new (Function.prototype.bind.apply(Function, [null].concat(['React'], _toConsumableArray(keys), ['return (' + code + ')'])))();

  return fn.apply(undefined, [_react2.default].concat(_toConsumableArray(values)));
};
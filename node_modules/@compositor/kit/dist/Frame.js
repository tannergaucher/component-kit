'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _nanoStyle = require('nano-style');

var _nanoStyle2 = _interopRequireDefault(_nanoStyle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Frame = function (_React$Component) {
  _inherits(Frame, _React$Component);

  function Frame() {
    _classCallCheck(this, Frame);

    var _this = _possibleConstructorReturn(this, (Frame.__proto__ || Object.getPrototypeOf(Frame)).call(this));

    _this.doc = null;
    _this.win = null;
    _this.div = null;

    _this.getSrc = function () {
      var _this$props = _this.props,
          _this$props$zoom = _this$props.zoom,
          zoom = _this$props$zoom === undefined ? 1 : _this$props$zoom,
          _this$props$css = _this$props.css,
          css = _this$props$css === undefined ? '' : _this$props$css;

      return '<style>*{box-sizing:border-box}body{margin:0;min-height:100vh;zoom:' + zoom + '} ' + css + '</style>\n<div id=\'app\'></div>';
    };

    _this.onLoad = function (e) {
      _this.doc = _this.root.contentDocument;
      _this.win = _this.root.contentWindow;
      _this.update(_this.props);
    };

    _this.update = function (_ref) {
      var children = _ref.children;

      if (!_this.doc) return;
      var div = _this.doc.getElementById('app');
      (0, _reactDom.render)(children, div);
    };
    return _this;
  }

  _createClass(Frame, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(next) {
      if (next.children !== this.props.children) {
        this.update(next);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          width = _props.width,
          height = _props.height,
          zoom = _props.zoom,
          children = _props.children;


      return _react2.default.createElement('iframe', {
        ref: function ref(_ref2) {
          return _this2.root = _ref2;
        },
        style: {
          width: width,
          height: height,
          zoom: zoom,
          pointerEvents: 'none',
          display: 'block',
          margin: 0,
          overflow: 'scroll',
          backgroundColor: '#fff',
          opacity: !!children ? 1 : 0.25,
          border: 0
        },
        srcDoc: this.getSrc(),
        scrolling: 'yes',
        onLoad: this.onLoad
      });
    }
  }]);

  return Frame;
}(_react2.default.Component);

Frame.defaultProps = {
  zoom: 1,
  width: '100%',
  height: '100%',
  css: 'body{font-family:system-ui,sans-serif;line-height:1.5}'
};
exports.default = Frame;